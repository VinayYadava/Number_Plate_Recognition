# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AEN2RKdT5TMPtdgfsYutAZSXYBu_lIL4
"""

!pip install opencv-python
!pip install imutils
!pip install easyocr

import matplotlib.pyplot as plt
import numpy as np
import easyocr
import cv2
import imutils
import os

Directory="/content/drive/MyDrive/new_repository/numberplate_text_detection/sample_images"
LST=os.listdir(Directory)

def img_to_text(DIR):
  for file in LST:
    img=cv2.imread("/content/drive/MyDrive/new_repository/numberplate_text_detection/sample_images/"+f"{file}")
    gray=cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    img=cv2.imread("/content/drive/MyDrive/new_repository/numberplate_text_detection/sample_images/image4.jpg")
    gray=cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    bilat_fil=cv2.bilateralFilter(gray,11,17,17)
    edge=cv2.Canny(bilat_fil,30,200)
    response=cv2.findContours(edge.copy(),cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
    contours=imutils.grab_contours(response)
    contours=sorted(contours,key=cv2.contourArea,reverse=True)[:10]
    Location=None
    dic={}
    count=0
    for c in contours:
      approx=cv2.approxPolyDP(c,20,True)
      dic[f"{count}"]=len(approx)
      count=count+1
      if len(approx)==4:
        Location=approx
        break
    Location=np.expand_dims(Location,0)
    mask=np.zeros(gray.shape,np.uint8)                             #it was used to create a blank mask of shame shape as gray...
    new_image = cv2.drawContours(mask,Location,0,255,-1)
    new_image = cv2.bitwise_and(img,img,mask=mask)
    x,y=np.where(mask==255)
    x1,y1=np.min(x),np.min(y)
    x2,y2=np.max(x),np.max(y)
    cropped_image=gray[x1:x2+1 , y1:y2+1]
    reader=easyocr.Reader(["en"] ,gpu=True)
    text=reader.readtext(cropped_image,detail=0 )
    return text

m=img_to_text(Directory)

m

